
syntax on
filetype on
filetype plugin on
filetype indent on

set encoding=utf8

set nocompatible
"set background=light
"colorscheme Tomorrow
set display=lastline

set number             " display line numbers
set cursorline


"256 color terminals
set t_Co=256

set backspace=eol,start,indent

" GnuPG
let g:GPGPreferArmor=1
let g:GPGPreferSign=1

augroup GnuPGExtra
  autocmd BufReadCmd,FileReadCmd *.\(gpg\|asc\|pgp\) call SetGPGOptions()
  autocmd CursorHold *.\(gpg\|asc\|pgp\) quit
augroup END

function SetGPGOptions()
  set updatetime=60000
  set foldmethod=marker
  set foldclose=all
  set foldopen=insert
endfunction

" backup settings
set nobackup             " disable backup
set noswapfile
"set backup              " keep a backup file
set backupdir=~/tmp/vim  " backup dir
set directory=~/tmp/vim  " swap file directory

" tabs and indenting
set expandtab           " insert spaces instead of tab chars
set tabstop=2           " a n-space tab width
set shiftwidth=2        " allows the use of < and > for VISUAL indenting
set softtabstop=2       " counts n spaces when DELETE or BCKSPCE is used
set autoindent          " auto indents next new line

" searching
set hlsearch            " highlight all search results
set incsearch           " increment search
set ignorecase          " case-insensitive search
set smartcase           " upper-case sensitive search

" visual features
set showmatch           " show matching brackets

" window
autocmd Filetype sh,python,eruby,ruby set textwidth=84
autocmd Filetype eruby setlocal ts=2 sts=2 sw=2
autocmd Filetype ruby setlocal ts=2 sts=2 sw=2

" enable wildmenu ( :e ~/<path>/<Ctrl+D>
set wildmenu

" filetype detection
au BufRead,BufNewFile *.pp      setfiletype puppet

" For .sh syntax highlighting, make Bash default not Sh
let g:is_bash=1

" return to last position on re-edit file
if has("autocmd")
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

cabbrev w!! w !sudo tee > /dev/null %

